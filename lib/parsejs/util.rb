module Util

  def is_alphanumeric_char?(ch)
    is_digit?(ch) || is_letter?(ch)
  end

  def HOP(obj, prop)
    # in Javascript, you convert your arrays to hashes, then check the hash
    # crazy eh.
    # in Ruby, we'll just check the array
    obj.include?(prop)
  end

  def is_letter?(ch)
    !(/[A-Za-z]/ =~ ch).nil?
  end

  def is_digit?(ch)
    ch = ch[0].ord
    (ch >= 48 && ch <= 57) #XXX: find out if "UnicodeDigit" means something else than 0..9
  end

  def is_unicode_combining_mark?(ch)
    !(UNICODE[:non_spacing_mark] =~ ch).nil? || !(UNICODE[:space_combining_mark] =~ ch).nil?
  end

  def is_unicode_connector_punctuation?(ch)
    !(UNICODE[:connector_punctuation] =~ ch).nil?
  end

  def is_identifier_start?(ch)
    ch == "$" || ch == "_" || is_letter?(ch)
  end

  def is_identifier_char?(ch)
    (
      is_identifier_start?(ch) ||
      is_unicode_combining_mark?(ch) ||
      is_digit?(ch) ||
      is_unicode_connector_punctuation?(ch) ||
      ch == "\u200c" || # zero-width non-joiner <ZWNJ>
      ch == "\u200d" # zero-width joiner <ZWJ> (in my ECMA-262 PDF, this is also 200c)
    )
  end

  PRECEDENCE =  {
    '||'=>1,
    '&&'=>2,
    '|'=>3,
    '^'=>4,
    '&'=>5,
    '=='=>6,
    '==='=>6,
    '!='=>6,
    '!=='=>6,
    '<'=>7,
    '>'=>7,
    '<='=>7,
    '>='=>7,
    'in'=>7,
    'instanceof'=>7,
    '>>'=>8,
    '<<'=>8,
    '>>>'=>8,
    '+'=>9,
    '-'=>9,
    '*'=>10,
    '/'=>10,
    '%'=>10
  }

  KEYWORDS = [
          "break",
          "case",
          "catch",
          "const",
          "continue",
          "default",
          "delete",
          "do",
          "else",
          "finally",
          "for",
          "function",
          "if",
          "in",
          "instanceof",
          "new",
          "return",
          "switch",
          "throw",
          "try",
          "typeof",
          "var",
          "void",
          "while",
          "with"
  ]

  RESERVED_WORDS = [
          "abstract",
          "boolean",
          "byte",
          "char",
          "class",
          "debugger",
          "double",
          "enum",
          "export",
          "extends",
          "final",
          "float",
          "goto",
          "implements",
          "import",
          "int",
          "interface",
          "long",
          "native",
          "package",
          "private",
          "protected",
          "public",
          "short",
          "static",
          "super",
          "synchronized",
          "throws",
          "transient",
          "volatile"
  ]

  OPERATORS = [
          "in",
          "instanceof",
          "typeof",
          "new",
          "void",
          "delete",
          "++",
          "--",
          "+",
          "-",
          "!",
          "~",
          "&",
          "|",
          "^",
          "*",
          "/",
          "%",
          ">>",
          "<<",
          ">>>",
          "<",
          ">",
          "<=",
          ">=",
          "==",
          "===",
          "!=",
          "!==",
          "?",
          "=",
          "+=",
          "-=",
          "/=",
          "*=",
          "%=",
          ">>=",
          "<<=",
          ">>>=",
          "|=",
          "^=",
          "&=",
          "&&",
          "||"
  ]

  KEYWORDS_ATOM = [
          "false",
          "null",
          "true",
          "undefined"
  ]

  # // regexps adapted from http://xregexp.com/plugins/#unicode
  UNICODE_LETTERS = [
      (0x0041..0x005A).to_a,
      (0x0061..0x007A).to_a,
      0x00AA,
      0x00B5,
      0x00BA,
      (0x00C0..0x00D6).to_a,
      (0x00D8..0x00F6).to_a,
      (0x00F8..0x02C1).to_a,
      (0x02C6..0x02D1).to_a,
      (0x02E0..0x02E4).to_a,
      0x02EC,
      0x02EE,
      (0x0370..0x0374).to_a,
      0x0376,
      0x0377,
      (0x037A..0x037D).to_a,
      0x0386,
      (0x0388..0x038A).to_a,
      0x038C,
      (0x038E..0x03A1).to_a,
      (0x03A3..0x03F5).to_a,
      (0x03F7..0x0481).to_a,
      (0x048A..0x0523).to_a,
      (0x0531..0x0556).to_a,
      0x0559,
      (0x0561..0x0587).to_a,
      (0x05D0..0x05EA).to_a,
      (0x05F0..0x05F2).to_a,
      (0x0621..0x064A).to_a,
      0x066E,
      0x066F,
      (0x0671..0x06D3).to_a,
      0x06D5,
      0x06E5,
      0x06E6,
      0x06EE,
      0x06EF,
      (0x06FA..0x06FC).to_a,
      0x06FF,
      0x0710,
      (0x0712..0x072F).to_a,
      (0x074D..0x07A5).to_a,
      0x07B1,
      (0x07CA..0x07EA).to_a,
      0x07F4,
      0x07F5,
      0x07FA,
      (0x0904..0x0939).to_a,
      0x093D,
      0x0950,
      (0x0958..0x0961).to_a,
      0x0971,
      0x0972,
      (0x097B..0x097F).to_a,
      (0x0985..0x098C).to_a,
      0x098F,
      0x0990,
      (0x0993..0x09A8).to_a,
      (0x09AA..0x09B0).to_a,
      0x09B2,
      (0x09B6..0x09B9).to_a,
      0x09BD,
      0x09CE,
      0x09DC,
      0x09DD,
      (0x09DF..0x09E1).to_a,
      0x09F0,
      0x09F1,
      (0x0A05..0x0A0A).to_a,
      0x0A0F,
      0x0A10,
      (0x0A13..0x0A28).to_a,
      (0x0A2A..0x0A30).to_a,
      0x0A32,
      0x0A33,
      0x0A35,
      0x0A36,
      0x0A38,
      0x0A39,
      (0x0A59..0x0A5C).to_a,
      0x0A5E,
      (0x0A72..0x0A74).to_a,
      (0x0A85..0x0A8D).to_a,
      (0x0A8F..0x0A91).to_a,
      (0x0A93..0x0AA8).to_a,
      (0x0AAA..0x0AB0).to_a,
      0x0AB2,
      0x0AB3,
      (0x0AB5..0x0AB9).to_a,
      0x0ABD,
      0x0AD0,
      0x0AE0,
      0x0AE1,
      (0x0B05..0x0B0C).to_a,
      0x0B0F,
      0x0B10,
      (0x0B13..0x0B28).to_a,
      (0x0B2A..0x0B30).to_a,
      0x0B32,
      0x0B33,
      (0x0B35..0x0B39).to_a,
      0x0B3D,
      0x0B5C,
      0x0B5D,
      (0x0B5F..0x0B61).to_a,
      0x0B71,
      0x0B83,
      (0x0B85..0x0B8A).to_a,
      (0x0B8E..0x0B90).to_a,
      (0x0B92..0x0B95).to_a,
      0x0B99,
      0x0B9A,
      0x0B9C,
      0x0B9E,
      0x0B9F,
      0x0BA3,
      0x0BA4,
      (0x0BA8..0x0BAA).to_a,
      (0x0BAE..0x0BB9).to_a,
      0x0BD0,
      (0x0C05..0x0C0C).to_a,
      (0x0C0E..0x0C10).to_a,
      (0x0C12..0x0C28).to_a,
      (0x0C2A..0x0C33).to_a,
      (0x0C35..0x0C39).to_a,
      0x0C3D,
      0x0C58,
      0x0C59,
      0x0C60,
      0x0C61,
      (0x0C85..0x0C8C).to_a,
      (0x0C8E..0x0C90).to_a,
      (0x0C92..0x0CA8).to_a,
      (0x0CAA..0x0CB3).to_a,
      (0x0CB5..0x0CB9).to_a,
      0x0CBD,
      0x0CDE,
      0x0CE0,
      0x0CE1,
      (0x0D05..0x0D0C).to_a,
      (0x0D0E..0x0D10).to_a,
      (0x0D12..0x0D28).to_a,
      (0x0D2A..0x0D39).to_a,
      0x0D3D,
      0x0D60,
      0x0D61,
      (0x0D7A..0x0D7F).to_a,
      (0x0D85..0x0D96).to_a,
      (0x0D9A..0x0DB1).to_a,
      (0x0DB3..0x0DBB).to_a,
      0x0DBD,
      (0x0DC0..0x0DC6).to_a,
      (0x0E01..0x0E30).to_a,
      0x0E32,
      0x0E33,
      (0x0E40..0x0E46).to_a,
      0x0E81,
      0x0E82,
      0x0E84,
      0x0E87,
      0x0E88,
      0x0E8A,
      0x0E8D,
      (0x0E94..0x0E97).to_a,
      (0x0E99..0x0E9F).to_a,
      (0x0EA1..0x0EA3).to_a,
      0x0EA5,
      0x0EA7,
      0x0EAA,
      0x0EAB,
      (0x0EAD..0x0EB0).to_a,
      0x0EB2,
      0x0EB3,
      0x0EBD,
      (0x0EC0..0x0EC4).to_a,
      0x0EC6,
      0x0EDC,
      0x0EDD,
      0x0F00,
      (0x0F40..0x0F47).to_a,
      (0x0F49..0x0F6C).to_a,
      (0x0F88..0x0F8B).to_a,
      (0x1000..0x102A).to_a,
      0x103F,
      (0x1050..0x1055).to_a,
      (0x105A..0x105D).to_a,
      0x1061,
      0x1065,
      0x1066,
      (0x106E..0x1070).to_a,
      (0x1075..0x1081).to_a,
      0x108E,
      (0x10A0..0x10C5).to_a,
      (0x10D0..0x10FA).to_a,
      0x10FC,
      (0x1100..0x1159).to_a,
      (0x115F..0x11A2).to_a,
      (0x11A8..0x11F9).to_a,
      (0x1200..0x1248).to_a,
      (0x124A..0x124D).to_a,
      (0x1250..0x1256).to_a,
      0x1258,
      (0x125A..0x125D).to_a,
      (0x1260..0x1288).to_a,
      (0x128A..0x128D).to_a,
      (0x1290..0x12B0).to_a,
      (0x12B2..0x12B5).to_a,
      (0x12B8..0x12BE).to_a,
      0x12C0,
      (0x12C2..0x12C5).to_a,
      (0x12C8..0x12D6).to_a,
      (0x12D8..0x1310).to_a,
      (0x1312..0x1315).to_a,
      (0x1318..0x135A).to_a,
      (0x1380..0x138F).to_a,
      (0x13A0..0x13F4).to_a,
      (0x1401..0x166C).to_a,
      (0x166F..0x1676).to_a,
      (0x1681..0x169A).to_a,
      (0x16A0..0x16EA).to_a,
      (0x1700..0x170C).to_a,
      (0x170E..0x1711).to_a,
      (0x1720..0x1731).to_a,
      (0x1740..0x1751).to_a,
      (0x1760..0x176C).to_a,
      (0x176E..0x1770).to_a,
      (0x1780..0x17B3).to_a,
      0x17D7,
      0x17DC,
      (0x1820..0x1877).to_a,
      (0x1880..0x18A8).to_a,
      0x18AA,
      (0x1900..0x191C).to_a,
      (0x1950..0x196D).to_a,
      (0x1970..0x1974).to_a,
      (0x1980..0x19A9).to_a,
      (0x19C1..0x19C7).to_a,
      (0x1A00..0x1A16).to_a,
      (0x1B05..0x1B33).to_a,
      (0x1B45..0x1B4B).to_a,
      (0x1B83..0x1BA0).to_a,
      0x1BAE,
      0x1BAF,
      (0x1C00..0x1C23).to_a,
      (0x1C4D..0x1C4F).to_a,
      (0x1C5A..0x1C7D).to_a,
      (0x1D00..0x1DBF).to_a,
      (0x1E00..0x1F15).to_a,
      (0x1F18..0x1F1D).to_a,
      (0x1F20..0x1F45).to_a,
      (0x1F48..0x1F4D).to_a,
      (0x1F50..0x1F57).to_a,
      0x1F59,
      0x1F5B,
      0x1F5D,
      (0x1F5F..0x1F7D).to_a,
      (0x1F80..0x1FB4).to_a,
      (0x1FB6..0x1FBC).to_a,
      0x1FBE,
      (0x1FC2..0x1FC4).to_a,
      (0x1FC6..0x1FCC).to_a,
      (0x1FD0..0x1FD3).to_a,
      (0x1FD6..0x1FDB).to_a,
      (0x1FE0..0x1FEC).to_a,
      (0x1FF2..0x1FF4).to_a,
      (0x1FF6..0x1FFC).to_a,
      0x2071,
      0x207F,
      (0x2090..0x2094).to_a,
      0x2102,
      0x2107,
      (0x210A..0x2113).to_a,
      0x2115,
      (0x2119..0x211D).to_a,
      0x2124,
      0x2126,
      0x2128,
      (0x212A..0x212D).to_a,
      (0x212F..0x2139).to_a,
      (0x213C..0x213F).to_a,
      (0x2145..0x2149).to_a,
      0x214E,
      0x2183,
      0x2184,
      (0x2C00..0x2C2E).to_a,
      (0x2C30..0x2C5E).to_a,
      (0x2C60..0x2C6F).to_a,
      (0x2C71..0x2C7D).to_a,
      (0x2C80..0x2CE4).to_a,
      (0x2D00..0x2D25).to_a,
      (0x2D30..0x2D65).to_a,
      0x2D6F,
      (0x2D80..0x2D96).to_a,
      (0x2DA0..0x2DA6).to_a,
      (0x2DA8..0x2DAE).to_a,
      (0x2DB0..0x2DB6).to_a,
      (0x2DB8..0x2DBE).to_a,
      (0x2DC0..0x2DC6).to_a,
      (0x2DC8..0x2DCE).to_a,
      (0x2DD0..0x2DD6).to_a,
      (0x2DD8..0x2DDE).to_a,
      0x2E2F,
      0x3005,
      0x3006,
      (0x3031..0x3035).to_a,
      0x303B,
      0x303C,
      (0x3041..0x3096).to_a,
      (0x309D..0x309F).to_a,
      (0x30A1..0x30FA).to_a,
      (0x30FC..0x30FF).to_a,
      (0x3105..0x312D).to_a,
      (0x3131..0x318E).to_a,
      (0x31A0..0x31B7).to_a,
      (0x31F0..0x31FF).to_a,
      0x3400,
      0x4DB5,
      0x4E00,
      0x9FC3,
      (0xA000..0xA48C).to_a,
      (0xA500..0xA60C).to_a,
      (0xA610..0xA61F).to_a,
      0xA62A,
      0xA62B,
      (0xA640..0xA65F).to_a,
      (0xA662..0xA66E).to_a,
      (0xA67F..0xA697).to_a,
      (0xA717..0xA71F).to_a,
      (0xA722..0xA788).to_a,
      0xA78B,
      0xA78C,
      (0xA7FB..0xA801).to_a,
      (0xA803..0xA805).to_a,
      (0xA807..0xA80A).to_a,
      (0xA80C..0xA822).to_a,
      (0xA840..0xA873).to_a,
      (0xA882..0xA8B3).to_a,
      (0xA90A..0xA925).to_a,
      (0xA930..0xA946).to_a,
      (0xAA00..0xAA28).to_a,
      (0xAA40..0xAA42).to_a,
      (0xAA44..0xAA4B).to_a,
      0xAC00,
      0xD7A3,
      (0xF900..0xFA2D).to_a,
      (0xFA30..0xFA6A).to_a,
      (0xFA70..0xFAD9).to_a,
      (0xFB00..0xFB06).to_a,
      (0xFB13..0xFB17).to_a,
      0xFB1D,
      (0xFB1F..0xFB28).to_a,
      (0xFB2A..0xFB36).to_a,
      (0xFB38..0xFB3C).to_a,
      0xFB3E,
      0xFB40,
      0xFB41,
      0xFB43,
      0xFB44,
      (0xFB46..0xFBB1).to_a,
      (0xFBD3..0xFD3D).to_a,
      (0xFD50..0xFD8F).to_a,
      (0xFD92..0xFDC7).to_a,
      (0xFDF0..0xFDFB).to_a,
      (0xFE70..0xFE74).to_a,
      (0xFE76..0xFEFC).to_a,
      (0xFF21..0xFF3A).to_a,
      (0xFF41..0xFF5A).to_a,
      (0xFF66..0xFFBE).to_a,
      (0xFFC2..0xFFC7).to_a,
      (0xFFCA..0xFFCF).to_a,
      (0xFFD2..0xFFD7).to_a,
      (0xFFDA..0xFFDC).to_a
      ].flatten.pack('U*').freeze
    UNICODE_NON_SPACE_MARK = [
      (0x0300..0x036F).to_a,
      (0x0483..0x0487).to_a,
      (0x0591..0x05BD).to_a,
      0x05BF,
      0x05C1,
      0x05C2,
      0x05C4,
      0x05C5,
      0x05C7,
      (0x0610..0x061A).to_a,
      (0x064B..0x065E).to_a,
      0x0670,
      (0x06D6..0x06DC).to_a,
      (0x06DF..0x06E4).to_a,
      0x06E7,
      0x06E8,
      (0x06EA..0x06ED).to_a,
      0x0711,
      (0x0730..0x074A).to_a,
      (0x07A6..0x07B0).to_a,
      (0x07EB..0x07F3).to_a,
      (0x0816..0x0819).to_a,
      (0x081B..0x0823).to_a,
      (0x0825..0x0827).to_a,
      (0x0829..0x082D).to_a,
      (0x0900..0x0902).to_a,
      0x093C,
      (0x0941..0x0948).to_a,
      0x094D,
      (0x0951..0x0955).to_a,
      0x0962,
      0x0963,
      0x0981,
      0x09BC,
      (0x09C1..0x09C4).to_a,
      0x09CD,
      0x09E2,
      0x09E3,
      0x0A01,
      0x0A02,
      0x0A3C,
      0x0A41,
      0x0A42,
      0x0A47,
      0x0A48,
      (0x0A4B..0x0A4D).to_a,
      0x0A51,
      0x0A70,
      0x0A71,
      0x0A75,
      0x0A81,
      0x0A82,
      0x0ABC,
      (0x0AC1..0x0AC5).to_a,
      0x0AC7,
      0x0AC8,
      0x0ACD,
      0x0AE2,
      0x0AE3,
      0x0B01,
      0x0B3C,
      0x0B3F,
      (0x0B41..0x0B44).to_a,
      0x0B4D,
      0x0B56,
      0x0B62,
      0x0B63,
      0x0B82,
      0x0BC0,
      0x0BCD,
      (0x0C3E..0x0C40).to_a,
      (0x0C46..0x0C48).to_a,
      (0x0C4A..0x0C4D).to_a,
      0x0C55,
      0x0C56,
      0x0C62,
      0x0C63,
      0x0CBC,
      0x0CBF,
      0x0CC6,
      0x0CCC,
      0x0CCD,
      0x0CE2,
      0x0CE3,
      (0x0D41..0x0D44).to_a,
      0x0D4D,
      0x0D62,
      0x0D63,
      0x0DCA,
      (0x0DD2..0x0DD4).to_a,
      0x0DD6,
      0x0E31,
      (0x0E34..0x0E3A).to_a,
      (0x0E47..0x0E4E).to_a,
      0x0EB1,
      (0x0EB4..0x0EB9).to_a,
      0x0EBB,
      0x0EBC,
      (0x0EC8..0x0ECD).to_a,
      0x0F18,
      0x0F19,
      0x0F35,
      0x0F37,
      0x0F39,
      (0x0F71..0x0F7E).to_a,
      (0x0F80..0x0F84).to_a,
      0x0F86,
      0x0F87,
      (0x0F90..0x0F97).to_a,
      (0x0F99..0x0FBC).to_a,
      0x0FC6,
      (0x102D..0x1030).to_a,
      (0x1032..0x1037).to_a,
      0x1039,
      0x103A,
      0x103D,
      0x103E,
      0x1058,
      0x1059,
      (0x105E..0x1060).to_a,
      (0x1071..0x1074).to_a,
      0x1082,
      0x1085,
      0x1086,
      0x108D,
      0x109D,
      0x135F,
      (0x1712..0x1714).to_a,
      (0x1732..0x1734).to_a,
      0x1752,
      0x1753,
      0x1772,
      0x1773,
      (0x17B7..0x17BD).to_a,
      0x17C6,
      (0x17C9..0x17D3).to_a,
      0x17DD,
      (0x180B..0x180D).to_a,
      0x18A9,
      (0x1920..0x1922).to_a,
      0x1927,
      0x1928,
      0x1932,
      (0x1939..0x193B).to_a,
      0x1A17,
      0x1A18,
      0x1A56,
      (0x1A58..0x1A5E).to_a,
      0x1A60,
      0x1A62,
      (0x1A65..0x1A6C).to_a,
      (0x1A73..0x1A7C).to_a,
      0x1A7F,
      (0x1B00..0x1B03).to_a,
      0x1B34,
      (0x1B36..0x1B3A).to_a,
      0x1B3C,
      0x1B42,
      (0x1B6B..0x1B73).to_a,
      0x1B80,
      0x1B81,
      (0x1BA2..0x1BA5).to_a,
      0x1BA8,
      0x1BA9,
      (0x1C2C..0x1C33).to_a,
      0x1C36,
      0x1C37,
      (0x1CD0..0x1CD2).to_a,
      (0x1CD4..0x1CE0).to_a,
      (0x1CE2..0x1CE8).to_a,
      0x1CED,
      (0x1DC0..0x1DE6).to_a,
      (0x1DFD..0x1DFF).to_a,
      (0x20D0..0x20DC).to_a,
      0x20E1,
      (0x20E5..0x20F0).to_a,
      (0x2CEF..0x2CF1).to_a,
      (0x2DE0..0x2DFF).to_a,
      (0x302A..0x302F).to_a,
      0x3099,
      0x309A,
      0xA66F,
      0xA67C,
      0xA67D,
      0xA6F0,
      0xA6F1,
      0xA802,
      0xA806,
      0xA80B,
      0xA825,
      0xA826,
      0xA8C4,
      (0xA8E0..0xA8F1).to_a,
      (0xA926..0xA92D).to_a,
      (0xA947..0xA951).to_a,
      (0xA980..0xA982).to_a,
      0xA9B3,
      (0xA9B6..0xA9B9).to_a,
      0xA9BC,
      (0xAA29..0xAA2E).to_a,
      0xAA31,
      0xAA32,
      0xAA35,
      0xAA36,
      0xAA43,
      0xAA4C,
      0xAAB0,
      (0xAAB2..0xAAB4).to_a,
      0xAAB7,
      0xAAB8,
      0xAABE,
      0xAABF,
      0xAAC1,
      0xABE5,
      0xABE8,
      0xABED,
      0xFB1E,
      (0xFE00..0xFE0F).to_a,
      (0xFE20..0xFE26).to_a
      ].flatten.pack('U*').freeze
    UNICODE_SPACE_COMBINING_MARK = [
      0x0903,
      (0x093E..0x0940).to_a,
      (0x0949..0x094C).to_a,
      0x094E,
      0x0982,
      0x0983,
      (0x09BE..0x09C0).to_a,
      0x09C7,
      0x09C8,
      0x09CB,
      0x09CC,
      0x09D7,
      0x0A03,
      (0x0A3E..0x0A40).to_a,
      0x0A83,
      (0x0ABE..0x0AC0).to_a,
      0x0AC9,
      0x0ACB,
      0x0ACC,
      0x0B02,
      0x0B03,
      0x0B3E,
      0x0B40,
      0x0B47,
      0x0B48,
      0x0B4B,
      0x0B4C,
      0x0B57,
      0x0BBE,
      0x0BBF,
      0x0BC1,
      0x0BC2,
      (0x0BC6..0x0BC8).to_a,
      (0x0BCA..0x0BCC).to_a,
      0x0BD7,
      (0x0C01..0x0C03).to_a,
      (0x0C41..0x0C44).to_a,
      0x0C82,
      0x0C83,
      0x0CBE,
      (0x0CC0..0x0CC4).to_a,
      0x0CC7,
      0x0CC8,
      0x0CCA,
      0x0CCB,
      0x0CD5,
      0x0CD6,
      0x0D02,
      0x0D03,
      (0x0D3E..0x0D40).to_a,
      (0x0D46..0x0D48).to_a,
      (0x0D4A..0x0D4C).to_a,
      0x0D57,
      0x0D82,
      0x0D83,
      (0x0DCF..0x0DD1).to_a,
      (0x0DD8..0x0DDF).to_a,
      0x0DF2,
      0x0DF3,
      0x0F3E,
      0x0F3F,
      0x0F7F,
      0x102B,
      0x102C,
      0x1031,
      0x1038,
      0x103B,
      0x103C,
      0x1056,
      0x1057,
      (0x1062..0x1064).to_a,
      (0x1067..0x106D).to_a,
      0x1083,
      0x1084,
      (0x1087..0x108C).to_a,
      0x108F,
      (0x109A..0x109C).to_a,
      0x17B6,
      (0x17BE..0x17C5).to_a,
      0x17C7,
      0x17C8,
      (0x1923..0x1926).to_a,
      (0x1929..0x192B).to_a,
      0x1930,
      0x1931,
      (0x1933..0x1938).to_a,
      (0x19B0..0x19C0).to_a,
      0x19C8,
      0x19C9,
      (0x1A19..0x1A1B).to_a,
      0x1A55,
      0x1A57,
      0x1A61,
      0x1A63,
      0x1A64,
      (0x1A6D..0x1A72).to_a,
      0x1B04,
      0x1B35,
      0x1B3B,
      (0x1B3D..0x1B41).to_a,
      0x1B43,
      0x1B44,
      0x1B82,
      0x1BA1,
      0x1BA6,
      0x1BA7,
      0x1BAA,
      (0x1C24..0x1C2B).to_a,
      0x1C34,
      0x1C35,
      0x1CE1,
      0x1CF2,
      0xA823,
      0xA824,
      0xA827,
      0xA880,
      0xA881,
      (0xA8B4..0xA8C3).to_a,
      0xA952,
      0xA953,
      0xA983,
      0xA9B4,
      0xA9B5,
      0xA9BA,
      0xA9BB,
      (0xA9BD..0xA9C0).to_a,
      0xAA2F,
      0xAA30,
      0xAA33,
      0xAA34,
      0xAA4D,
      0xAA7B,
      0xABE3,
      0xABE4,
      0xABE6,
      0xABE7,
      0xABE9,
      0xABEA,
      0xABEC
      ].flatten.pack('U*').freeze
    UNICODE_CONNECTOR_PUNCTUATION = [
      0x005F,
      0x203F,
      0x2040,
      0x2054,
      0xFE33,
      0xFE34,
      (0xFE4D..0xFE4F).to_a,
      0xFF3F
      ].flatten.pack('U*').freeze
    UNICODE = {
      :letter => /[#{UNICODE_LETTERS}]/o,
      :non_spacing_mark => /[#{UNICODE_NON_SPACE_MARK}]/o,
      :space_combining_mark => /[#{UNICODE_SPACE_COMBINING_MARK}]/o,
      :connector_punctuation => /[#{UNICODE_CONNECTOR_PUNCTUATION}]/o,
    }




end